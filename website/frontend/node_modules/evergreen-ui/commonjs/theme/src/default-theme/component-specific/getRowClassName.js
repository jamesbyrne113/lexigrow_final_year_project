"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _tinycolor = _interopRequireDefault(require("tinycolor2"));

var _themer = require("../../../../themer");

var _memoizeClassName = _interopRequireDefault(require("../utils/memoizeClassName"));

var _scales = _interopRequireDefault(require("../foundational-styles/scales"));

var _palette = _interopRequireDefault(require("../foundational-styles/palette"));

var Appearances = {};
Appearances["default"] = _themer.Themer.createRowAppearance({
  base: {},
  hover: {
    backgroundColor: _scales["default"].neutral.N1A
  },
  focus: {
    backgroundColor: _scales["default"].blue.B1A
  },
  active: {
    backgroundColor: _scales["default"].blue.B2A
  },
  current: {}
});
Appearances.danger = _themer.Themer.createRowAppearance({
  base: {
    backgroundColor: _palette["default"].red.lightest
  },
  hover: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].red.lightest).darken(1).toString()
  },
  focus: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].red.lightest).darken(1.5).toString()
  },
  active: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].red.lightest).darken(2.2).toString()
  },
  current: {}
});
Appearances.warning = _themer.Themer.createRowAppearance({
  base: {
    backgroundColor: _palette["default"].orange.lightest
  },
  hover: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].orange.lightest).darken(1).toString()
  },
  focus: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].orange.lightest).darken(1.5).toString()
  },
  active: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].orange.lightest).darken(2.5).toString()
  },
  current: {}
});
Appearances.success = _themer.Themer.createRowAppearance({
  base: {
    backgroundColor: _palette["default"].green.lightest
  },
  hover: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].green.lightest).darken(1).toString()
  },
  focus: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].green.lightest).darken(2).toString()
  },
  active: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].green.lightest).darken(3).toString()
  },
  current: {}
});
/**
 * Get the appearance of a `Row`.
 * @param {string} appearance â€” only one default appearance.
 * @param {string} intent - none, info, success, warning, danger.
 * @return {string} the appearance object.
 */

var getRowAppearance = function getRowAppearance(appearance, intent) {
  switch (intent) {
    case 'danger':
      return Appearances.danger;

    case 'warning':
      return Appearances.warning;

    case 'success':
      return Appearances.success;

    case 'none':
    default:
      return Appearances["default"];
  }
};
/**
 * Get the className of a `Row`.
 * @param {string} appearance
 * @return {string} the appearance class name.
 */


var _default = (0, _memoizeClassName["default"])(getRowAppearance);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90aGVtZS9zcmMvZGVmYXVsdC10aGVtZS9jb21wb25lbnQtc3BlY2lmaWMvZ2V0Um93Q2xhc3NOYW1lLmpzIl0sIm5hbWVzIjpbIkFwcGVhcmFuY2VzIiwiVGhlbWVyIiwiY3JlYXRlUm93QXBwZWFyYW5jZSIsImJhc2UiLCJob3ZlciIsImJhY2tncm91bmRDb2xvciIsInNjYWxlcyIsIm5ldXRyYWwiLCJOMUEiLCJmb2N1cyIsImJsdWUiLCJCMUEiLCJhY3RpdmUiLCJCMkEiLCJjdXJyZW50IiwiZGFuZ2VyIiwicGFsZXR0ZSIsInJlZCIsImxpZ2h0ZXN0IiwiZGFya2VuIiwidG9TdHJpbmciLCJ3YXJuaW5nIiwib3JhbmdlIiwic3VjY2VzcyIsImdyZWVuIiwiZ2V0Um93QXBwZWFyYW5jZSIsImFwcGVhcmFuY2UiLCJpbnRlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLFdBQVcsR0FBRyxFQUFwQjtBQUVBQSxXQUFXLFdBQVgsR0FBc0JDLGVBQU9DLG1CQUFQLENBQTJCO0FBQy9DQyxFQUFBQSxJQUFJLEVBQUUsRUFEeUM7QUFHL0NDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxlQUFlLEVBQUVDLG1CQUFPQyxPQUFQLENBQWVDO0FBRDNCLEdBSHdDO0FBTy9DQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEosSUFBQUEsZUFBZSxFQUFFQyxtQkFBT0ksSUFBUCxDQUFZQztBQUR4QixHQVB3QztBQVcvQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQ05QLElBQUFBLGVBQWUsRUFBRUMsbUJBQU9JLElBQVAsQ0FBWUc7QUFEdkIsR0FYdUM7QUFlL0NDLEVBQUFBLE9BQU8sRUFBRTtBQWZzQyxDQUEzQixDQUF0QjtBQWtCQWQsV0FBVyxDQUFDZSxNQUFaLEdBQXFCZCxlQUFPQyxtQkFBUCxDQUEyQjtBQUM5Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0pFLElBQUFB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QUtlLGtDQUFpQnlCLGdCQUFqQixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRpbnljb2xvciBmcm9tICd0aW55Y29sb3IyJ1xuaW1wb3J0IHsgVGhlbWVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vdGhlbWVyJ1xuaW1wb3J0IG1lbW9pemVDbGFzc05hbWUgZnJvbSAnLi4vdXRpbHMvbWVtb2l6ZUNsYXNzTmFtZSdcbmltcG9ydCBzY2FsZXMgZnJvbSAnLi4vZm91bmRhdGlvbmFsLXN0eWxlcy9zY2FsZXMnXG5pbXBvcnQgcGFsZXR0ZSBmcm9tICcuLi9mb3VuZGF0aW9uYWwtc3R5bGVzL3BhbGV0dGUnXG5cbmNvbnN0IEFwcGVhcmFuY2VzID0ge31cblxuQXBwZWFyYW5jZXMuZGVmYXVsdCA9IFRoZW1lci5jcmVhdGVSb3dBcHBlYXJhbmNlKHtcbiAgYmFzZToge30sXG5cbiAgaG92ZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNjYWxlcy5uZXV0cmFsLk4xQVxuICB9LFxuXG4gIGZvY3VzOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBzY2FsZXMuYmx1ZS5CMUFcbiAgfSxcblxuICBhY3RpdmU6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNjYWxlcy5ibHVlLkIyQVxuICB9LFxuXG4gIGN1cnJlbnQ6IHt9XG59KVxuXG5BcHBlYXJhbmNlcy5kYW5nZXIgPSBUaGVtZXIuY3JlYXRlUm93QXBwZWFyYW5jZSh7XG4gIGJhc2U6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUucmVkLmxpZ2h0ZXN0XG4gIH0sXG5cbiAgaG92ZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLnJlZC5saWdodGVzdClcbiAgICAgIC5kYXJrZW4oMSlcbiAgICAgIC50b1N0cmluZygpXG4gIH0sXG5cbiAgZm9jdXM6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLnJlZC5saWdodGVzdClcbiAgICAgIC5kYXJrZW4oMS41KVxuICAgICAgLnRvU3RyaW5nKClcbiAgfSxcblxuICBhY3RpdmU6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLnJlZC5saWdodGVzdClcbiAgICAgIC5kYXJrZW4oMi4yKVxuICAgICAgLnRvU3RyaW5nKClcbiAgfSxcblxuICBjdXJyZW50OiB7fVxufSlcblxuQXBwZWFyYW5jZXMud2FybmluZyA9IFRoZW1lci5jcmVhdGVSb3dBcHBlYXJhbmNlKHtcbiAgYmFzZToge1xuICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5vcmFuZ2UubGlnaHRlc3RcbiAgfSxcblxuICBob3Zlcjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGlueWNvbG9yKHBhbGV0dGUub3JhbmdlLmxpZ2h0ZXN0KVxuICAgICAgLmRhcmtlbigxKVxuICAgICAgLnRvU3RyaW5nKClcbiAgfSxcblxuICBmb2N1czoge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGlueWNvbG9yKHBhbGV0dGUub3JhbmdlLmxpZ2h0ZXN0KVxuICAgICAgLmRhcmtlbigxLjUpXG4gICAgICAudG9TdHJpbmcoKVxuICB9LFxuXG4gIGFjdGl2ZToge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGlueWNvbG9yKHBhbGV0dGUub3JhbmdlLmxpZ2h0ZXN0KVxuICAgICAgLmRhcmtlbigyLjUpXG4gICAgICAudG9TdHJpbmcoKVxuICB9LFxuXG4gIGN1cnJlbnQ6IHt9XG59KVxuXG5BcHBlYXJhbmNlcy5zdWNjZXNzID0gVGhlbWVyLmNyZWF0ZVJvd0FwcGVhcmFuY2Uoe1xuICBiYXNlOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLmdyZWVuLmxpZ2h0ZXN0XG4gIH0sXG5cbiAgaG92ZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLmdyZWVuLmxpZ2h0ZXN0KVxuICAgICAgLmRhcmtlbigxKVxuICAgICAgLnRvU3RyaW5nKClcbiAgfSxcblxuICBmb2N1czoge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGlueWNvbG9yKHBhbGV0dGUuZ3JlZW4ubGlnaHRlc3QpXG4gICAgICAuZGFya2VuKDIpXG4gICAgICAudG9TdHJpbmcoKVxuICB9LFxuXG4gIGFjdGl2ZToge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGlueWNvbG9yKHBhbGV0dGUuZ3JlZW4ubGlnaHRlc3QpXG4gICAgICAuZGFya2VuKDMpXG4gICAgICAudG9TdHJpbmcoKVxuICB9LFxuXG4gIGN1cnJlbnQ6IHt9XG59KVxuXG4vKipcbiAqIEdldCB0aGUgYXBwZWFyYW5jZSBvZiBhIGBSb3dgLlxuICogQHBhcmFtIHtzdHJpbmd9IGFwcGVhcmFuY2Ug4oCUIG9ubHkgb25lIGRlZmF1bHQgYXBwZWFyYW5jZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBpbnRlbnQgLSBub25lLCBpbmZvLCBzdWNjZXNzLCB3YXJuaW5nLCBkYW5nZXIuXG4gKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSBhcHBlYXJhbmNlIG9iamVjdC5cbiAqL1xuY29uc3QgZ2V0Um93QXBwZWFyYW5jZSA9IChhcHBlYXJhbmNlLCBpbnRlbnQpID0+IHtcbiAgc3dpdGNoIChpbnRlbnQpIHtcbiAgICBjYXNlICdkYW5nZXInOlxuICAgICAgcmV0dXJuIEFwcGVhcmFuY2VzLmRhbmdlclxuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgcmV0dXJuIEFwcGVhcmFuY2VzLndhcm5pbmdcbiAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgIHJldHVybiBBcHBlYXJhbmNlcy5zdWNjZXNzXG4gICAgY2FzZSAnbm9uZSc6XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBBcHBlYXJhbmNlcy5kZWZhdWx0XG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgdGhlIGNsYXNzTmFtZSBvZiBhIGBSb3dgLlxuICogQHBhcmFtIHtzdHJpbmd9IGFwcGVhcmFuY2VcbiAqIEByZXR1cm4ge3N0cmluZ30gdGhlIGFwcGVhcmFuY2UgY2xhc3MgbmFtZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZUNsYXNzTmFtZShnZXRSb3dBcHBlYXJhbmNlKVxuIl19